-- Creating users table in Oracle with id as the primary key
CREATE TABLE users (
  id NUMBER GENERATED BY DEFAULT AS IDENTITY, -- Auto-incrementing id
  username VARCHAR2(50) NOT NULL,
  password VARCHAR2(50) NOT NULL,
  enabled NUMBER(1) NOT NULL,
  PRIMARY KEY (id)
);

-- Inserting data into users table
INSERT INTO users (username, password, enabled) VALUES ('eslam', '{noop}test123', 1);
INSERT INTO users (username, password, enabled) VALUES ('ahmed', '{noop}test123', 1);
INSERT INTO users (username, password, enabled) VALUES ('osama', '{noop}test123', 1);

-- Creating authorities table in Oracle with a foreign key reference to users.id
CREATE TABLE authorities (
  user_id NUMBER NOT NULL,
  authority VARCHAR2(50) NOT NULL,
  CONSTRAINT authorities_idx_1 UNIQUE (user_id, authority),
  CONSTRAINT authorities_ibfk_1 FOREIGN KEY (user_id) REFERENCES users (id)
);

-- Inserting data into authorities table using user_id values
-- For this, we need to know the ids of 'john', 'mary', and 'susan'
-- Assuming their ids are 1, 2, and 3 respectively (for demonstration; use a SELECT query in practice)

INSERT INTO authorities (user_id, authority) VALUES (1, 'ROLE_EMPLOYEE');
INSERT INTO authorities (user_id, authority) VALUES (2, 'ROLE_EMPLOYEE');
INSERT INTO authorities (user_id, authority) VALUES (2, 'ROLE_MANAGER');
INSERT INTO authorities (user_id, authority) VALUES (3, 'ROLE_EMPLOYEE');
INSERT INTO authorities (user_id, authority) VALUES (3, 'ROLE_MANAGER');
INSERT INTO authorities (user_id, authority) VALUES (3, 'ROLE_ADMIN');
